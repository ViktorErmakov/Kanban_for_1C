//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2024 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

Функция ТаблицыРавны(ПроверяемоеЗначение, ОжидаемоеЗначение, ПараметрыСравнения) Экспорт
	
	Различия = РазличияТаблиц(ПроверяемоеЗначение, ОжидаемоеЗначение, ПараметрыСравнения);
	Возврат НЕ ЗначениеЗаполнено(Различия);
	
КонецФункции

Функция РазличияТаблиц(ПроверяемоеЗначение, ОжидаемоеЗначение, ПараметрыСравнения) Экспорт
	
	Различия = Новый Массив;
	
	Если ПроверяемоеЗначение.Количество() = 0 И ОжидаемоеЗначение.Количество() = 0 Тогда
		// Нечего сравнивать
		Возврат Различия;
	КонецЕсли;
	
	Если ПроверяемоеЗначение.Количество() <> ОжидаемоеЗначение.Количество() Тогда
		Сообщение = СтрШаблон("Разное количество строк. Ожидали `%1`, а получили `%2`",
							  ОжидаемоеЗначение.Количество(),
							  ПроверяемоеЗначение.Количество());
		Различия.Добавить(Сообщение);
		Возврат Различия;
	КонецЕсли;
	
	Если ПроверяемоеЗначение.Колонки.Количество() <> ОжидаемоеЗначение.Колонки.Количество() Тогда
		Сообщение = СтрШаблон("Разное количество колонок. Ожидали `%1`, а получили `%2`",
							  ОжидаемоеЗначение.Колонки.Количество(),
							  ПроверяемоеЗначение.Колонки.Количество());
		Различия.Добавить(Сообщение);
		Возврат Различия;
	КонецЕсли;
	
	Для Каждого Колонка Из ОжидаемоеЗначение.Колонки Цикл
		
		Если ПроверяемоеЗначение.Колонки.Найти(Колонка.Имя) = Неопределено Тогда
			Сообщение = СтрШаблон("Проверяемая таблица не содержит колонку '%1'", Колонка.Имя);
			Различия.Добавить(Сообщение);
			Продолжить;
		КонецЕсли;
		
		Индекс = ПроверяемоеЗначение.Количество() - 1;
		
		Пока Индекс >= 0 Цикл
			
			ЗначенияРавны = ЮТСравнениеСлужебныйКлиентСервер.ЗначенияРавны(ПроверяемоеЗначение[Индекс][Колонка.Имя],
																		   ОжидаемоеЗначение[Индекс][Колонка.Имя],
																		   ПараметрыСравнения);
			Если НЕ ЗначенияРавны Тогда
				Сообщение = СтрШаблон("Строка № %1; колонка '%2'; ожидали %3, а получили %4",
									  Индекс + 1,
									  Колонка.Имя,
									  ЮТСообщенияСлужебный.ПредставлениеЗначения(ОжидаемоеЗначение[Индекс][Колонка.Имя]),
									  ЮТСообщенияСлужебный.ПредставлениеЗначения(ПроверяемоеЗначение[Индекс][Колонка.Имя]));
				Различия.Добавить(Сообщение);
			КонецЕсли;
			
			Индекс = Индекс - 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Различия;
	
КонецФункции

Функция РазличияТабличныхДокументов(ПроверяемыйТабличныйДокумент, ОжидаемыйТабличныйДокумент, ПараметрыСравнения) Экспорт
	
	ПроверяемоеЗначение = ПолучитьТаблицуЗначенийИзТабличногоДокумента(ПроверяемыйТабличныйДокумент);
	ОжидаемоеЗначение = ПолучитьТаблицуЗначенийИзТабличногоДокумента(ОжидаемыйТабличныйДокумент);
	
	Возврат РазличияТаблиц(ПроверяемоеЗначение, ОжидаемоеЗначение, ПараметрыСравнения);
	
КонецФункции

Функция ТабличныеДокументыРавны(ПроверяемыйТабличныйДокумент, ОжидаемыйТабличныйДокумент, ПараметрыСравнения) Экспорт
	
	Различия = РазличияТабличныхДокументов(ПроверяемыйТабличныйДокумент, ОжидаемыйТабличныйДокумент, ПараметрыСравнения);
	Возврат НЕ ЗначениеЗаполнено(Различия);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуЗначенийИзТабличногоДокумента(ТабличныйДокумент, УчитыватьТолькоВидимыеКолонки = Ложь, УчитыватьТолькоВидимыеСтроки = Ложь)
	// https://github.com/vanessa-opensource/add 
	// перенесен из Functest
	
	ЮТПроверкиСлужебный.ПроверитьТипПараметра(ТабличныйДокумент,
											  Тип("ТабличныйДокумент"),
											  "ЮТСравнениеСлужебныйСервер.ПолучитьТаблицуЗначенийИзТабличногоДокумента",
											  "ТабличныйДокумент");
	
	Если УчитыватьТолькоВидимыеКолонки И УчитыватьТолькоВидимыеСтроки Тогда
		ЮТТестовыеДанныеСлужебныйСервер.ТаблицаИзТабличногоДокумента(ТабличныйДокумент);
	КонецЕсли;
	
	НоваяТаблицаЗначений = Новый ТаблицаЗначений;
	
	УчитываемыеКолонки = УчитываемыеКолонки(ТабличныйДокумент, НоваяТаблицаЗначений, УчитыватьТолькоВидимыеКолонки);
	
	ГраницаКолонок = УчитываемыеКолонки.ВГраница();
	НомерПоследнейСтроки = ТабличныйДокумент.ВысотаТаблицы;
	
	Для НомерСтроки = 1 По НомерПоследнейСтроки Цикл
		
		УчитыватьСтроку = УчитыватьТолькоВидимыеСтроки И Не ТабличныйДокумент.Область(НомерСтроки, , НомерСтроки).Видимость;
		Если УчитыватьСтроку Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = НоваяТаблицаЗначений.Добавить();
		
		Для Индекс = 0 По ГраницаКолонок Цикл
			Область = ТабличныйДокумент.Область(НомерСтроки, УчитываемыеКолонки[Индекс]);
			НоваяСтрока[Индекс] = Область.Текст;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат НоваяТаблицаЗначений;
	
КонецФункции

Функция УчитываемыеКолонки(ТабличныйДокумент, ТаблицаЗначений, УчитыватьТолькоВидимыеКолонки)
	
	ТипСтрока = Новый ОписаниеТипов("Строка");
	НомерПоследнейКолонки = ТабличныйДокумент.ШиринаТаблицы;
	Колонки = ТаблицаЗначений.Колонки;
	
	// При определении видимости не учитывается наличие нескольких форматов строк, сейчас видимость колонки определяется по формату первой строки
	УчитываемыеКолонки = Новый Массив;
	Для НомерКолонки = 1 По НомерПоследнейКолонки Цикл
		
		ОбластьКолонки = ТабличныйДокумент.Область(1, НомерКолонки);
		УчитыватьКолонку = Не УчитыватьТолькоВидимыеКолонки Или ОбластьКолонки.Видимость;
		
		Если УчитыватьКолонку Тогда
			УчитываемыеКолонки.Добавить(НомерКолонки);
			ИмяКолонки = "К" + Формат(Колонки.Количество() + 1, "ЧН=; ЧГ=0");
			Колонки.Добавить(ИмяКолонки, ТипСтрока);
		КонецЕсли;
	КонецЦикла;
	
	Возврат УчитываемыеКолонки;
	
КонецФункции

#КонецОбласти
