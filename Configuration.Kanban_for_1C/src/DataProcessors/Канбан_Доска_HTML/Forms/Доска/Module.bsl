// @strict-types


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
//	КанбанДоска = канбан_КанбанДоска.ПолучитьТекстHTML();
	МакетСтраницаРекламы = Обработки.Канбан_Доска_HTML.ПолучитьМакет("ШаблонКанбанДоскиHTML");
	ДокументHTML = МакетСтраницаРекламы.ПолучитьДокументHTML();
	
	ДанныеДляДоски = канбан_КанбанДоскаПереопределяемый.ДанныеДляКанбанДоски();
	
//	ДокументОтладка = Элементы.КанбанДоска.Документ;
//	Узелhead = Элементы.КанбанДоска.Документ.ПолучитьЭлементПоИдентификатору("head");
	
//	Документ = Новый ДокументHTML;
//	Документ.ТекстовоеСодержимое = КанбанДоска;
//	АтрибутыДокумента = Документ.Атрибуты;

	
//	УзелСтили = ДокументHTML.ПолучитьЭлементыПоИмени("Style")[0];
//	Стили = Обработки.канбан_Доска.ПолучитьМакет("Стили").ПолучитьТекст();
//	УзелСтили.ТекстовоеСодержимое = Стили;
//	
//	КанбанДоска = ТекстHTMLИзОбъектаДокументHTML(ДокументHTML);
	
	
	КанбанДоска = ТекстHTMLИзОбъектаДокументHTML(ДокументHTML);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиКомандФормы

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получает текст HTML из объекта ДокументHTML.
//
// Параметры:
//  ДокументHTML  - ДокументHTML - документ, из которого будет извлекаться текст.
//
// Возвращаемое значение:
//   Строка   - текст HTML
//
&НаСервере
Функция ТекстHTMLИзОбъектаДокументHTML(Знач ДокументHTML)
	
	ЗаписьDOM = Новый ЗаписьDOM;
	ЗаписьHTML = Новый ЗаписьHTML;
	ЗаписьHTML.УстановитьСтроку();
	ЗаписьDOM.Записать(ДокументHTML, ЗаписьHTML);
	
	Возврат ЗаписьHTML.Закрыть();
	
КонецФункции

#КонецОбласти
